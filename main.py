# -*- coding: utf-8 -*-
"""main.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-MptautI8DaLc7l4pz8_ImlRFgrZFcGQ
"""

from fastapi import FastAPI
from pydantic import BaseModel
import sqlite3

app = FastAPI()

# Criação do banco se não existir
def init_db():
    conn = sqlite3.connect("db.sqlite3")
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS cpfs (
            cpf TEXT PRIMARY KEY,
            nome TEXT,
            verificado INTEGER DEFAULT 1
        );
    """)
    conn.commit()
    conn.close()

init_db()

# Modelo para entrada via POST
class Pessoa(BaseModel):
    nome: str
    cpf: str

# Rota principal: POST /verificar
@app.post("/verificar")
def verificar_ou_registrar(pessoa: Pessoa):
    conn = sqlite3.connect("db.sqlite3")
    cursor = conn.cursor()

    # Verifica se já existe
    cursor.execute("SELECT * FROM cpfs WHERE cpf = ?", (pessoa.cpf,))
    resultado = cursor.fetchone()

    if resultado:
        status = "já verificado"
    else:
        cursor.execute("INSERT INTO cpfs (cpf, nome) VALUES (?, ?)", (pessoa.cpf, pessoa.nome))
        conn.commit()
        status = "registrado"

    conn.close()
    return {"cpf": pessoa.cpf, "nome": pessoa.nome, "status": status}